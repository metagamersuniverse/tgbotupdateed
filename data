async function getDexscreenerData() {
  const response = await axios.get('https://api.dexscreener.com/latest/dex/pairs/arbitrum/0xbf28fc1d36478c562ef25ab7701bd6f72f0d48b9,0xBF28FC1D36478C562ef25aB7701bd6f72f0d48B9');
  const data = response.data;
  const pair = data.pairs[0];
  const price = pair.priceUsd;
  const priceChange1h = pair.priceChange.h1;
  const priceChange24h = pair.priceChange.h24;
  const volume24h = pair.volume.h24;
  const liquidity = pair.liquidity.usd;
  const marketCap = pair.fdv;
  const buyers24h = pair.txns.h24.buys;
  const sellers24h = pair.txns.h24.sells;
  return {
    symbol: pair.baseToken.symbol,
    name: pair.baseToken.name,
    chainId: pair.chainId,
    price: `$${price}`,
    priceChange1h: `${priceChange1h.toFixed(2)}%`,
    priceChange24h: `${priceChange24h.toFixed(2)}%`,
    volume24h: `$${volume24h.toLocaleString()}`,
    liquidity: `$${liquidity.toLocaleString()}`,
    marketCap: `$${marketCap.toLocaleString()}`,
    buyers24h: buyers24h,
    sellers24h: sellers24h
  };
}

//bot.onText(/\/price/, async (msg) => {
  console.log('Price command received');
  const data = await getDexscreenerData();
  const message = `
ðŸ’° ${data.symbol} Price: ${data.price}
âš¡ Name: ${data.name}
âš¡ Network: ${data.chainId}
ðŸ“ˆ 1h: ${data.priceChange1h}
ðŸ“ˆ 24h: ${data.priceChange24h}
ðŸ“Š Volume: ${data.volume24h}
ðŸ‘¥ 24h Total Buyers: ${data.buyers24h}
ðŸ’¦ Liquidity: ${data.liquidity}
ðŸ’Ž Market Cap (FDV): ${data.marketCap}`;

  const keyboard = {
    inline_keyboard: [
      [
        { text: "ðŸ“ŠChart", url: "https://example.com/link1" },
        { text: "ðŸ’°BUY NOW", url: "https://example.com/link2" },
      ],
    ],
  };

  const options = {
    reply_markup: JSON.stringify(keyboard),
  };

  bot.sendMessage(msg.chat.id, message, options);
});


// buy the /buy command
bot.onText(/\/buy/, (msg) => {
    console.log('ca command received');
    const message = `
  <b>To buy a $LEPE, please visit one of the following websites:</b>
  `;
    const options = {
      parse_mode: "HTML",
      reply_markup: {
        inline_keyboard: [
          [
            { text: "ðŸ“ŠChart", url: "https://www.dexview.com/arbitrum/0x6CB0e4dA8F621A3901573bD8c8d2C8A0987d78d6" },
            { text: "ðŸ’°BUY NOW", url: "https://app.sushi.com/swap?inputCurrency=ETH&outputCurrency=0x6CB0e4dA8F621A3901573bD8c8d2C8A0987d78d6&chainId=42161" }
          ]
        ]
      }
    };
    bot.sendMessage(msg.chat.id, message, options);
  });


